{"ast":null,"code":"var _jsxFileName = \"/Users/mary/Dropbox/Mac/Documents/project/db-project/src/components/DentistHygienistView/Appointments.js\",\n    _s = $RefreshSig$();\n\nimport \"./subTabs.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Appointments = () => {\n  _s();\n\n  const user = useContext(UserContext);\n  const [appointments, setAppointments] = useState([]);\n  let uid = user.user.id;\n  useEffect(() => {\n    axios.get(`http://localhost:8000/appointmentsByDentist?employeeID=${uid}`).then(response => {\n      return response.data.queryResults;\n    }).then(data => {\n      setAppointments(data);\n    }).catch(error => {\n      if (error.message === \"Request failed with status code 400\") {\n        alert(\"Invalid Uid\");\n      } else {\n        alert(error.message);\n      }\n    });\n  }, [\"\"]);\n\n  const noAppointments = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"You have no upcoming appointments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderAppointment = appointment => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: appointment.date.substring(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: appointment.appointmentType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: appointment.patientID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: appointment.startTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: appointment.endTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Appointments subViewOutline m-5 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row m-5 \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col subViewTitle text-center\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"Patient ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"Start Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: \"End Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), appointments === undefined || appointments.length === 0 ? noAppointments() : appointments.map(renderAppointment)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Appointments, \"+bmTN4fa+JNRQLQNK5gcOicKP+E=\");\n\n_c = Appointments;\nexport default Appointments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"sources":["/Users/mary/Dropbox/Mac/Documents/project/db-project/src/components/DentistHygienistView/Appointments.js"],"names":["useState","useContext","useEffect","UserContext","axios","Appointments","user","appointments","setAppointments","uid","id","get","then","response","data","queryResults","catch","error","message","alert","noAppointments","renderAppointment","appointment","date","substring","appointmentType","patientID","startTime","endTime","undefined","length","map"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGL,UAAU,CAACE,WAAD,CAAvB;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,MAAIS,GAAG,GAAGH,IAAI,CAACA,IAAL,CAAUI,EAApB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACO,GAAN,CAAW,0DAAyDF,GAAI,EAAxE,EACCG,IADD,CACOC,QAAD,IAAc;AAEhB,aAAOA,QAAQ,CAACC,IAAT,CAAcC,YAArB;AACH,KAJD,EAKCH,IALD,CAKOE,IAAD,IAAU;AAEZN,MAAAA,eAAe,CAACM,IAAD,CAAf;AACH,KARD,EASCE,KATD,CASQC,KAAD,IAAW;AACd,UAAIA,KAAK,CAACC,OAAN,KAAkB,qCAAtB,EAA6D;AACzDC,QAAAA,KAAK,CAAC,aAAD,CAAL;AAEH,OAHD,MAGO;AAEHA,QAAAA,KAAK,CAACF,KAAK,CAACC,OAAP,CAAL;AACH;AACJ,KAjBD;AAkBH,GAnBQ,EAmBN,CAAC,EAAD,CAnBM,CAAT;;AAqBA,QAAME,cAAc,GAAG,MAAM;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AASF,QAAMC,iBAAiB,GAAIC,WAAD,IAAiB;AACzC,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKA,WAAW,CAACC,IAAZ,CAAiBC,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKF,WAAW,CAACG;AADjB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKH,WAAW,CAACI;AADjB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKJ,WAAW,CAACK;AADjB;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKL,WAAW,CAACM;AADjB;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIM;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJN,eAOM;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPN,eAUM;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVN,eAaM;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbN;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAkBGrB,YAAY,KAAKsB,SAAjB,IAA8BtB,YAAY,CAACuB,MAAb,KAAwB,CAAtD,GAA0DV,cAAc,EAAxE,GAA6Eb,YAAY,CAACwB,GAAb,CAAiBV,iBAAjB,CAlBhF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtFD;;GAAMhB,Y;;KAAAA,Y;AAwFN,eAAeA,YAAf","sourcesContent":["import \"./subTabs.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport axios from \"axios\";\n\nconst Appointments = () => {\n    const user = useContext(UserContext);\n    const [appointments, setAppointments] = useState([]);\n\n    let uid = user.user.id;\n    useEffect(() => {\n        axios.get(`http://localhost:8000/appointmentsByDentist?employeeID=${uid}`)\n        .then((response) => {\n\n            return response.data.queryResults;\n        })\n        .then((data) => {\n        \n            setAppointments(data);\n        })\n        .catch((error) => {\n            if (error.message === \"Request failed with status code 400\") {\n                alert(\"Invalid Uid\");\n\n            } else {\n                \n                alert(error.message);\n            }\n        });\n    }, [\"\"]);\n\n    const noAppointments = () => {\n        return (\n            <div className=\"text-center\">\n                You have no upcoming appointments...\n            </div>\n        );\n    }\n\n\n  const renderAppointment = (appointment) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col\">\n                {appointment.date.substring(0,10)}\n            </div>\n            <div className=\"col\">\n                {appointment.appointmentType}\n            </div>\n            <div className=\"col\">\n                {appointment.patientID}\n            </div>\n            <div className=\"col\">\n                {appointment.startTime}\n            </div>\n            <div className=\"col\">\n                {appointment.endTime}\n            </div>\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"Appointments subViewOutline m-5 \">\n      <div className=\"row m-5 \">\n        <div className=\"col subViewTitle text-center\">Appointments</div>\n      </div>\n\n      <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n                Date:\n            </div>\n            <div className=\"col\">\n                Type:\n            </div>\n            <div className=\"col\">\n                Patient ID:\n            </div>\n            <div className=\"col\">\n                Start Time:\n            </div>\n            <div className=\"col\">\n                End Time:\n            </div>\n        </div>\n        {appointments === undefined || appointments.length === 0 ? noAppointments() : appointments.map(renderAppointment)}\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Appointments;\n"]},"metadata":{},"sourceType":"module"}