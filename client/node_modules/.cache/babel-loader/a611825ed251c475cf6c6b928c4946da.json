{"ast":null,"code":"var _jsxFileName = \"/Users/mary/Dropbox/Mac/Documents/project/db-project/src/components/Branches/branches.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Box.css\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branches = () => {\n  _s();\n\n  const [branches, setBranches] = useState([]);\n  const [dentistsPerBranch, setDentists] = useState([]);\n  const [setDoneSearch] = useState(false); // \tuseEffect(() => {\n  // \t\tlet tmp = [];\n  // \t\taxios\n  // \t\t\t.get(`http://localhost:8000/branches`)\n  // \t\t\t.then((response) => {\n  // \t\t\t\treturn response.data;\n  // \t\t\t})\n  // \t\t\t.then((data) => {\n  // \t\t\t\tsetBranches(data);\n  // \t\t\t\tdata.forEach((br) => {\n  // \t\t\t\t\taxios\n  // \t\t\t\t\t\t.get(\n  // \t\t\t\t\t\t\t`http://localhost:8000/dentistsInBranch?branchid=${br.branchID}`\n  // \t\t\t\t\t\t)\n  // \t\t\t\t\t\t.then((response) => {\n  // \t\t\t\t\t\t\treturn response.data.queryResults;\n  // \t\t\t\t\t\t})\n  // \t\t\t\t\t\t.then((data) => {\n  // \t\t\t\t\t\t\ttmp.push({ branchID: br.branchID, dentists: data });\n  // \t\t\t\t\t\t\tsetDentists([...tmp]);\n  // \t\t\t\t\t\t});\n  // \t\t\t\t});\n  // \t\t\t\tsetDoneSearch(true);\n  // \t\t\t})\n  // \t\t\t.catch((error) => {\n  // \t\t\t\tif (error.message === \"Request failed with status code 400\") {\n  // \t\t\t\t\talert(\"Invalid Uid\");\n  // \t\t\t\t} else {\n  // \t\t\t\t\talert(error.message);\n  // \t\t\t\t}\n  // \t\t\t});\n  // \t}, []);\n\n  let component = branch => {\n    let object = dentistsPerBranch.filter(d => d.branchID === branch);\n    console.log(object, object.length === 1);\n\n    if (object.length === 1) {\n      let a = \"Here's a list of doctors: \\n\";\n      object[0].dentists.forEach(d => {\n        a += d.first + \" \" + d.last + \"\\n\";\n      });\n      alert(a);\n      return;\n    }\n\n    alert(\"No Doctors In this branch\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Branches\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: branches.length !== 0 && dentistsPerBranch.length !== 0 ? branches.map(branch => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: \"10rem\"\n          },\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Branch \" + branch.branchID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: branch.houseNumber + \" \" + branch.street + \", \" + branch.city + \", \" + branch.province\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => component(branch.branchID),\n              children: \"View Doctors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 10\n          }, this)\n        }, branch.branchID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)) : \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Branches, \"XeZxgjs0T7Kev7LAjnYC6/t0AZw=\");\n\n_c = Branches;\nexport default Branches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branches\");","map":{"version":3,"sources":["/Users/mary/Dropbox/Mac/Documents/project/db-project/src/components/Branches/branches.js"],"names":["React","Card","Button","axios","useEffect","useState","Branches","branches","setBranches","dentistsPerBranch","setDentists","setDoneSearch","component","branch","object","filter","d","branchID","console","log","length","a","dentists","forEach","first","last","alert","map","height","houseNumber","street","city","province"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,iBAAD,EAAoBC,WAApB,IAAmCL,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAEM,aAAF,IAAmBN,QAAQ,CAAC,KAAD,CAAjC,CAHsB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,MAAIO,SAAS,GAAIC,MAAD,IAAY;AAC1B,QAAIC,MAAM,GAAGL,iBAAiB,CAACM,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeJ,MAA/C,CAAb;AACHK,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoBA,MAAM,CAACM,MAAP,KAAkB,CAAtC;;AACG,QAAIN,MAAM,CAACM,MAAP,KAAkB,CAAtB,EAAyB;AACxB,UAAIC,CAAC,GAAG,8BAAR;AACAP,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUQ,QAAV,CAAmBC,OAAnB,CAA4BP,CAAD,IAAO;AAEjCK,QAAAA,CAAC,IAAIL,CAAC,CAACQ,KAAF,GAAU,GAAV,GAAgBR,CAAC,CAACS,IAAlB,GAAyB,IAA9B;AACA,OAHD;AAKAC,MAAAA,KAAK,CAACL,CAAD,CAAL;AACA;AACA;;AAEDK,IAAAA,KAAK,CAAC,2BAAD,CAAL;AAED,GAhBD;;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACEnB,QAAQ,CAACa,MAAT,KAAoB,CAApB,IAAyBX,iBAAiB,CAACW,MAAlB,KAA6B,CAAtD,GACEb,QAAQ,CAACoB,GAAT,CAAcd,MAAD,iBACb,QAAC,IAAD;AACC,UAAA,KAAK,EAAE;AAAEe,YAAAA,MAAM,EAAE;AAAV,WADR;AAEC,UAAA,SAAS,EAAC,KAFX;AAAA,iCAIC,QAAC,IAAD,CAAM,IAAN;AAAA,oCACC,QAAC,IAAD,CAAM,KAAN;AAAA,wBAAa,YAAYf,MAAM,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,IAAD,CAAM,IAAN;AAAA,wBACEJ,MAAM,CAACgB,WAAP,GACA,GADA,GAEAhB,MAAM,CAACiB,MAFP,GAGA,IAHA,GAIAjB,MAAM,CAACkB,IAJP,GAKA,IALA,GAMAlB,MAAM,CAACmB;AAPT;AAAA;AAAA;AAAA;AAAA,oBAFD,eAWC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAG,MAAMpB,SAAS,CAACC,MAAM,CAACI,QAAR,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD,WAGMJ,MAAM,CAACI,QAHb;AAAA;AAAA;AAAA;AAAA,gBADA,CADF,GAsBE;AAvBJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CAxFD;;GAAMX,Q;;KAAAA,Q;AA0FN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"./Box.css\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst Branches = () => {\n\tconst [branches, setBranches] = useState([]);\n\tconst [dentistsPerBranch, setDentists] = useState([]);\n\tconst [ setDoneSearch] = useState(false);\n// \tuseEffect(() => {\n// \t\tlet tmp = [];\n// \t\taxios\n// \t\t\t.get(`http://localhost:8000/branches`)\n// \t\t\t.then((response) => {\n// \t\t\t\treturn response.data;\n// \t\t\t})\n// \t\t\t.then((data) => {\n// \t\t\t\tsetBranches(data);\n\n// \t\t\t\tdata.forEach((br) => {\n// \t\t\t\t\taxios\n// \t\t\t\t\t\t.get(\n// \t\t\t\t\t\t\t`http://localhost:8000/dentistsInBranch?branchid=${br.branchID}`\n// \t\t\t\t\t\t)\n// \t\t\t\t\t\t.then((response) => {\n// \t\t\t\t\t\t\treturn response.data.queryResults;\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t.then((data) => {\n// \t\t\t\t\t\t\ttmp.push({ branchID: br.branchID, dentists: data });\n// \t\t\t\t\t\t\tsetDentists([...tmp]);\n// \t\t\t\t\t\t});\n// \t\t\t\t});\n\n// \t\t\t\tsetDoneSearch(true);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tif (error.message === \"Request failed with status code 400\") {\n// \t\t\t\t\talert(\"Invalid Uid\");\n// \t\t\t\t} else {\n// \t\t\t\t\talert(error.message);\n// \t\t\t\t}\n// \t\t\t});\n// \t}, []);\n\n\tlet component = (branch) => {\n\t\t let object = dentistsPerBranch.filter((d) => d.branchID === branch);\nconsole.log(object, object.length === 1);\n\t\t if (object.length === 1) {\n\t\t\t let a = \"Here's a list of doctors: \\n\"\n\t\t\t object[0].dentists.forEach((d) => {\n\t\t\t\t \n\t\t\t\t a += d.first + \" \" + d.last + \"\\n\"\n\t\t\t })\n\t\t\t \n\t\t\t alert(a)\n\t\t\t return\n\t\t }\n\n\t\t alert(\"No Doctors In this branch\")\n\n\t};\n\n\treturn (\n\t\t<div className='Branches'>\n\t\t\t<div className='grid'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t{branches.length !== 0 && dentistsPerBranch.length !== 0\n\t\t\t\t\t\t? branches.map((branch) => (\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tstyle={{ height: \"10rem\" }}\n\t\t\t\t\t\t\t\t\tclassName='box'\n\t\t\t\t\t\t\t\t\tkey={branch.branchID}>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Title>{\"Branch \" + branch.branchID}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t{branch.houseNumber +\n\t\t\t\t\t\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\t\t\t\t\t\tbranch.street +\n\t\t\t\t\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\t\t\t\t\tbranch.city +\n\t\t\t\t\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\t\t\t\t\tbranch.province}\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick= {() => component(branch.branchID)}>View Doctors</Button>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: \"Loading\"}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Branches;\n"]},"metadata":{},"sourceType":"module"}